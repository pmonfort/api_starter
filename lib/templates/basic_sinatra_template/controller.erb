# frozen_string_literal: true

require './api/base_controller'

module API
  class <%= plural_name.capitalize %>Controller < BaseController
<% if actions.include?('index') %>
    get '<%= "/#{plural_name}" %>' do
      <%= "#{name}.all" %>
    end

<% end %>
<% if actions.include?('show') %>
    get '<%= "/#{plural_name}/:id" %>' do
      <%= name_downcase %>
    end

<% end %>
<% if actions.include?('create') %>
    post '<%= "/#{plural_name}" %>' do
<% unless required_fields.empty? %>
      <%= "required_params #{name_downcase}: %i[#{required_fields.map { |field| field['name'] }.join(' ')}]" %>
<% end %>
      <%= "#{name_downcase} = #{name}.new(#{name.downcase}_params)" %>
      if <%= "#{name_downcase}.save" %>
        status 201
        { message: '<%= name %> was successfully created.' }
      else
        halt 400, json({ message: <%= "#{name_downcase}.errors.full_messages" %> })
      end
    end

<% end %>
<% if actions.include?('update') %>
    put '<%= "/#{plural_name}/:id'" %> do
      if <%= "#{name_downcase}.update(#{name.downcase}_params)" %>
        { message: '<%= name %> was successfully updated.' }
      else
        halt 400, json({ message: <%= "#{name_downcase}.errors.full_messages" %> })
      end
    end

<% end %>
<% if actions.include?('delete') %>
    delete '<%= "/#{plural_name}/:id" %>' do
      <%= "#{name_downcase}.destroy" %>
      { message: '<%= name %> has been deleted' }
    end

<% end %>
<% if actions & %w[show update delete] %>
    def <%= name_downcase %>
      <%= "@#{name_downcase} ||= #{name}.find(params[:id])" %>
    rescue
      halt 404
    end
<% if actions & %w[create update] %>

<% end %>
<% end %>
<% if actions & %w[create update] %>
    def product_params
      params['<%= name_downcase %>'].slice(
        %w[<%= fields.map { |field| field['name'] }.join(' ') %>]
      )
    end
  end
<% end %>
end
